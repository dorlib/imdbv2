// Code generated by entc, DO NOT EDIT.

package movie

const (
	// Label holds the string label denoting the movie type in the database.
	Label = "movie"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldRank holds the string denoting the rank field in the database.
	FieldRank = "rank"
	// FieldDirectorID holds the string denoting the director_id field in the database.
	FieldDirectorID = "director_id"
	// EdgeDirector holds the string denoting the director edge name in mutations.
	EdgeDirector = "director"
	// EdgeReviews holds the string denoting the reviews edge name in mutations.
	EdgeReviews = "reviews"
	// Table holds the table name of the movie in the database.
	Table = "movies"
	// DirectorTable is the table that holds the director relation/edge.
	DirectorTable = "movies"
	// DirectorInverseTable is the table name for the Director entity.
	// It exists in this package in order to avoid circular dependency with the "director" package.
	DirectorInverseTable = "directors"
	// DirectorColumn is the table column denoting the director relation/edge.
	DirectorColumn = "director_id"
	// ReviewsTable is the table that holds the reviews relation/edge.
	ReviewsTable = "reviews"
	// ReviewsInverseTable is the table name for the Review entity.
	// It exists in this package in order to avoid circular dependency with the "review" package.
	ReviewsInverseTable = "reviews"
	// ReviewsColumn is the table column denoting the reviews relation/edge.
	ReviewsColumn = "review_movie"
)

// Columns holds all SQL columns for movie fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
	FieldRank,
	FieldDirectorID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
